[{"/Users/manuel/Desktop/inscribe-app/src/index.js":"1","/Users/manuel/Desktop/inscribe-app/src/App.js":"2","/Users/manuel/Desktop/inscribe-app/src/reportWebVitals.js":"3","/Users/manuel/Desktop/inscribe-app/src/pages/Dashboard.js":"4","/Users/manuel/Desktop/inscribe-app/src/store/GlobalState.jsx":"5","/Users/manuel/Desktop/inscribe-app/src/pages/ArticleEditor.js":"6","/Users/manuel/Desktop/inscribe-app/src/pages/Extensions.js":"7","/Users/manuel/Desktop/inscribe-app/src/pages/Home.js":"8","/Users/manuel/Desktop/inscribe-app/src/components/topbar/DashboardBar.js":"9","/Users/manuel/Desktop/inscribe-app/src/store/AppReducer.js":"10","/Users/manuel/Desktop/inscribe-app/src/store/ActionTypes.js":"11","/Users/manuel/Desktop/inscribe-app/src/components/topbar/ArticleToolbar.js":"12","/Users/manuel/Desktop/inscribe-app/src/components/InsMenu.js":"13","/Users/manuel/Desktop/inscribe-app/src/components/topbar/DesignToolbar.js":"14","/Users/manuel/Desktop/inscribe-app/src/components/SideBarRight.js":"15","/Users/manuel/Desktop/inscribe-app/src/components/BlockEditor.js":"16","/Users/manuel/Desktop/inscribe-app/src/components/ExtensionCard.js":"17","/Users/manuel/Desktop/inscribe-app/src/components/SideBarLeft.js":"18","/Users/manuel/Desktop/inscribe-app/src/components/DropZoneFile.js":"19","/Users/manuel/Desktop/inscribe-app/src/components/RecentContainer.js":"20","/Users/manuel/Desktop/inscribe-app/src/components/sidebar/TemplatesBar.js":"21","/Users/manuel/Desktop/inscribe-app/src/assets/icons/DownloadIcon.js":"22","/Users/manuel/Desktop/inscribe-app/src/assets/icons/UpdateIcon.js":"23","/Users/manuel/Desktop/inscribe-app/src/components/RecentFile.js":"24","/Users/manuel/Desktop/inscribe-app/src/components/Collaspible.js":"25","/Users/manuel/Desktop/inscribe-app/src/assets/icons/TrashIcon.js":"26","/Users/manuel/Desktop/inscribe-app/src/components/buttons/EditButton.js":"27","/Users/manuel/Desktop/inscribe-app/src/components/FileTemplate.js":"28","/Users/manuel/Desktop/inscribe-app/src/components/OutlineCollapsible.js":"29","/Users/manuel/Desktop/inscribe-app/src/components/InsModal.js":"30","/Users/manuel/Desktop/inscribe-app/src/components/ImageCropper.js":"31"},{"size":523,"mtime":1626706933350,"results":"32","hashOfConfig":"33"},{"size":141,"mtime":1626708968924,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1626706933351,"results":"35","hashOfConfig":"33"},{"size":1232,"mtime":1626706933351,"results":"36","hashOfConfig":"33"},{"size":5293,"mtime":1626751440284,"results":"37","hashOfConfig":"33"},{"size":9631,"mtime":1626748086096,"results":"38","hashOfConfig":"33"},{"size":2145,"mtime":1626706933351,"results":"39","hashOfConfig":"33"},{"size":497,"mtime":1626725931052,"results":"40","hashOfConfig":"33"},{"size":1700,"mtime":1626706933348,"results":"41","hashOfConfig":"33"},{"size":1861,"mtime":1626751620547,"results":"42","hashOfConfig":"33"},{"size":582,"mtime":1626751485334,"results":"43","hashOfConfig":"33"},{"size":2024,"mtime":1626706933348,"results":"44","hashOfConfig":"33"},{"size":2403,"mtime":1626706933345,"results":"45","hashOfConfig":"33"},{"size":1850,"mtime":1626706933348,"results":"46","hashOfConfig":"33"},{"size":306,"mtime":1626727129734,"results":"47","hashOfConfig":"33"},{"size":3413,"mtime":1626744675097,"results":"48","hashOfConfig":"33"},{"size":1587,"mtime":1626706933344,"results":"49","hashOfConfig":"33"},{"size":3507,"mtime":1626729645537,"results":"50","hashOfConfig":"33"},{"size":3181,"mtime":1626740251169,"results":"51","hashOfConfig":"33"},{"size":1188,"mtime":1626706933346,"results":"52","hashOfConfig":"33"},{"size":912,"mtime":1626706933348,"results":"53","hashOfConfig":"33"},{"size":1127,"mtime":1626706933289,"results":"54","hashOfConfig":"33"},{"size":1222,"mtime":1626706933290,"results":"55","hashOfConfig":"33"},{"size":1100,"mtime":1626706933346,"results":"56","hashOfConfig":"33"},{"size":945,"mtime":1626706933344,"results":"57","hashOfConfig":"33"},{"size":1790,"mtime":1626706933290,"results":"58","hashOfConfig":"33"},{"size":531,"mtime":1626706933347,"results":"59","hashOfConfig":"33"},{"size":352,"mtime":1626706933345,"results":"60","hashOfConfig":"33"},{"size":1354,"mtime":1626729425700,"results":"61","hashOfConfig":"33"},{"size":653,"mtime":1626755929304,"results":"62","hashOfConfig":"33"},{"size":3113,"mtime":1626757694530,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1ymnm69",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"66"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/manuel/Desktop/inscribe-app/src/index.js",[],["137","138"],"/Users/manuel/Desktop/inscribe-app/src/App.js",[],"/Users/manuel/Desktop/inscribe-app/src/reportWebVitals.js",[],"/Users/manuel/Desktop/inscribe-app/src/pages/Dashboard.js",[],"/Users/manuel/Desktop/inscribe-app/src/store/GlobalState.jsx",[],"/Users/manuel/Desktop/inscribe-app/src/pages/ArticleEditor.js",["139","140","141"],"import React, { useContext, useEffect, useState } from 'react'\nimport ArticleToolbar from '../components/topbar/ArticleToolbar'\nimport { ReactSVG } from \"react-svg\";\nimport './ArticleEditor.css';\nimport SideLeftIcon from './../assets/icons/side-left.svg';\nimport SideRightIcon from './../assets/icons/side-right.svg';\nimport ContentEditable from \"react-contenteditable\";\nimport InsMenu from '../components/InsMenu';\nimport InscribeIcon from './../assets/icons/inscribe.svg';\nimport PageFlowIcon from './../assets/icons/pageflow.svg';\nimport { GlobalContext } from '../store/GlobalState';\nimport DesignToolbar from '../components/topbar/DesignToolbar';\nimport SideBarLeft from '../components/SideBarLeft';\nimport SideBarRight from '../components/SideBarRight';\nimport localforage from 'localforage';\nimport BlockEditor from '../components/BlockEditor';\nimport {\n    DragDropContext,\n    Droppable,\n    Draggable\n} from \"react-beautiful-dnd\";\nimport InsModal from '../components/InsModal';\n\nfunction ArticleEditor() {\n\n    const { workspace, changeWorkspace, breakpoint, toggleLeftSidebar, toggleRightSidebar, loadPresentation, presentation, isLeftSidebarOpen, isRightSidebarOpen, addToPresentation } = useContext(GlobalContext);\n\n    useEffect(() => {\n        localforage.config({\n            driver: localforage.LOCALSTORAGE,\n            name: 'inscribe',\n            version: 1.0,\n        });\n        loadPresentation();\n\n        // shortcuts keys\n        shortcurtMethods();\n\n    }, []);\n\n    const shortcurtMethods = () => {\n        document.onkeyup = function (e) {\n            var evt = window.event || e;\n            console.log(evt)\n            switch (evt.keyCode) {\n                // delete\n                case 220:  \n                    // Call your method Here\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    const onDragEnd = async (result) => {\n        try {\n            const { source, destination, draggableId } = result;\n            if (!destination) {\n                return;\n            }\n            const destId = destination.droppableId;\n            const srcId = source.droppableId;\n            console.log(result)\n            if (destId) {\n                if (srcId === `droppable-assets`) {\n                    filterAsset(draggableId, destination.index)\n                }\n            }\n\n        } catch (error) { console.log(error) }\n    };\n\n  \n\n\n    const filterAsset = async (id, index) => {\n        try {\n            let _presentation = await localforage.getItem('presentation');\n            if (_presentation) {\n                let assetItems = _presentation.assets.filter(item => item.id === id);\n                \n                if (assetItems.length > 0) {\n                    let presentationItems = _presentation.items;\n                    \n                    let items = assetItems[0].items;\n                    if (assetItems[0].items && assetItems[0].items.length > 0) {\n                        addToPresentation([\n                            ...presentationItems,\n                            ...items\n                        ])\n                    } else {\n                        if (presentationItems.length > 0) {\n                            \n                            presentationItems.splice(index, 0, assetItems[0])\n                            addToPresentation(presentationItems)\n                        } else {\n                            addToPresentation([assetItems[0]])\n                        }\n                        \n                        \n                    }\n                } \n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n\n    const items = [\n        {\n            id: 0,\n            icon: <img className=\"mr-3\" width=\"20\" src={InscribeIcon} alt=\"\" />,\n            text: 'Writing',\n            disabled: false,\n            action: () => changeWorkspace(\"article\"),\n            description: 'Includes article writing and editing tools'\n        },\n        {\n            id: 1,\n            icon: <img className=\"mr-3\" width=\"20\" src={PageFlowIcon} alt=\"\" />,\n            text: 'Design',\n            action: () => changeWorkspace(\"presentation\"),\n            disabled: false,\n            description: 'Digital content layout and presentation tools.'\n        },\n    ]\n\n    const setBreakPointWidth = () => {\n        switch (breakpoint) {\n            case \"desktop\":\n                return \"100%\";\n            case \"tablet-portrait\":\n                return 767;\n            case \"tablet-landscape\":\n                return 1024;\n            case \"phone\":\n                return 425;\n            default:\n                return \"100%\";\n        }\n    }\n\n\n\n    return (\n        <>\n        <DragDropContext onDragEnd={onDragEnd}>\n            <div className=\"editor\">\n                <div className=\"flex fixed w-full border-b border-gray-100 px-4 flex-row justify-between py-2 z-50 bg-gray-50 \">\n                    <button className={`p-2 rounded bg-gray-900 ${isLeftSidebarOpen ? 'bg-opacity-5' : 'bg-opacity-0'}  hover:bg-opacity-5`} onClick={() => toggleLeftSidebar(isLeftSidebarOpen)}>\n                        <ReactSVG src={SideLeftIcon} />\n                    </button>\n                    {\n                        workspace === 'presentation' ? <DesignToolbar /> : <ArticleToolbar />\n                    }\n                    <div className=\"flex items-center\">\n                        <InsMenu items={items} title=\"Workspace\">\n                            <div className=\"hasDropdown p-2 rounded cursor-pointer bg-gray-900 bg-opacity-0 hover:bg-opacity-5\">\n                                <img style={{ float: 'left' }} src={workspace === \"presentation\" ? PageFlowIcon : InscribeIcon} alt=\"\" />\n                            </div>\n                        </InsMenu>\n                        <button className=\"p-2 rounded bg-gray-900 bg-opacity-0 hover:bg-opacity-5\">\n                            <ReactSVG\n                                src=\"/images/add.svg\"\n                            />\n                        </button>\n                        <button className={`p-2 mr-2 rounded bg-gray-900 ${isRightSidebarOpen ? 'bg-opacity-5' : 'bg-opacity-0'}  hover:bg-opacity-5`} onClick={() => toggleRightSidebar(isRightSidebarOpen)}>\n                            <ReactSVG src={SideRightIcon} />\n                        </button>\n                    </div>\n                </div>\n\n                <div className=\"flex justify-between bg-gray-200 overflow-hidden\">\n\n                    {isLeftSidebarOpen ? <SideBarLeft /> : null}\n\n                    <div className={`bg-white flex-1 mx-auto ${breakpoint !== 'desktop' ? 'border-l-4 border-r-4 border-gray-200' : ''}`} style={{ maxWidth: setBreakPointWidth() }}>\n\n                        <div className=\"container px-4 h-screen overflow-auto mx-auto pb-24\" style={{ paddingTop: workspace === 'presentation' ? 60 : 100, maxWidth: isLeftSidebarOpen || isRightSidebarOpen ? 600 : 1024 }} >\n                            <Droppable\n                                key={0}\n                                ignoreContainerClipping={true}\n\n                                droppableId={`droppable-document`}\n                                isDropDisabled={false}\n                            >\n                                {(provided, snapshot) => (\n\n                                    <div\n                                        className={`${snapshot.isDraggingOver ? 'bg-indigo-50 rounded-sm' : ''}`}\n                                        style={{ minHeight: presentation && presentation.items.length > 0 ? 'auto' : 800 }}\n                                        ref={provided.innerRef}\n                                    >\n                                        {\n                                            presentation && presentation.items.map((item, index) => {\n                                                return <Draggable\n                                                    key={index}\n                                                    \n                                                    draggableId={`${item.id}`}\n                                                    index={index}>\n                                                    {(provided, snapshot) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                        >\n                                                            <BlockEditor snapshot={snapshot} block={item} />\n                                                        </div>\n                                                    )}\n                                                </Draggable>\n                                            })\n                                        }\n\n                                        {provided.placeholder}\n                                    </div>\n                                )}\n                            </Droppable>\n\n                        </div>\n\n                    </div>\n\n                    {\n                        isRightSidebarOpen ?\n                            <SideBarRight content={<h1>TEST</h1>} /> :\n                            null\n                    }\n\n                </div>\n\n\n            </div>\n        </DragDropContext>\n        <InsModal />\n        </>\n    )\n}\nexport default ArticleEditor\n","/Users/manuel/Desktop/inscribe-app/src/pages/Extensions.js",["142","143"],"import React from \"react\";\nimport DropZoneFile from \"./../components/DropZoneFile\";\nimport extensions from \"./../assets/json/extensions.json\";\nimport ExtensionCard from \"../components/ExtensionCard\";\n\nfunction Extensions() {\n  return (\n    <div className=\"px-5 pb-5 pt-10 flex flex-wrap content-start\">\n      <div className=\"lg:w-1/2 px-4\">\n        <h2 className=\"font-bold text-xl mb-1\">Extensions</h2>\n        <input\n          className=\"px-2 mb-4 w-full rounded py-2 border border-gray-300 appearance-none focus:outline-none focus:border-indigo-800\"\n          type=\"text\"\n          placeholder=\"Search Extensions\"\n        />\n        <DropZoneFile name=\"extension folder\" />\n        <h2 className=\"font-bold text-xl my-3 py-2 border-b\">Installed</h2>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          {extensions &&\n            extensions.map((extension) => {\n              if (extension.isInstalled)\n                return (\n                  <ExtensionCard\n                    name={extension.name}\n                    icon={extension.icon}\n                    description={extension.description}\n                    isInstalled={extension.isInstalled}\n                    hasUpdate={extension.hasUpdate}\n                    size={extension.size}\n                  />\n                );\n            })}\n        </div>\n      </div>\n      <div className=\"lg:w-1/2 sm:mt-4 px-4\">\n        <h2 className=\"font-bold text-xl mb-3 pb-2 border-b\">Available</h2>\n\n        <div className=\"grid grid-cols-2 gap-4\">\n          {extensions &&\n            extensions.map((extension) => {\n              if (!extension.isInstalled)\n                return (\n                  <ExtensionCard\n                    name={extension.name}\n                    icon={extension.icon}\n                    key={extension.id}\n                    description={extension.description}\n                    isInstalled={extension.isInstalled}\n                    hasUpdate={extension.hasUpdate}\n                    size={extension.size}\n                  />\n                );\n            })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Extensions;\n","/Users/manuel/Desktop/inscribe-app/src/pages/Home.js",["144"],"import React from 'react'\nimport DropZoneFile from '../components/DropZoneFile'\nimport RecentContainer from '../components/RecentContainer'\nimport TemplatesBar from '../components/sidebar/TemplatesBar'\n\nfunction Home() {\n    return (\n        <div className=\"flex flex-row\">\n            {/* <TemplatesBar /> */}\n            <div className=\"p-5 flex-grow pt-10\">\n            <DropZoneFile name=\"file\" />\n            <RecentContainer />\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","/Users/manuel/Desktop/inscribe-app/src/components/topbar/DashboardBar.js",["145"],"import React from 'react'\nimport {\n    Link,\n    NavLink\n  } from \"react-router-dom\";\nimport InsMenu from '../InsMenu';\nimport InscribeIcon from './../../assets/icons/inscribe.svg';\nimport PageFlowIcon from './../../assets/icons/pageflow.svg';\nimport { useHistory } from \"react-router-dom\";\n\nfunction DashboardBar() {\n\n  let history = useHistory();\n\n\n  const items = [\n    {\n      id: 0, \n      icon: <img className=\"mr-3\" width=\"20\" src={InscribeIcon} alt=\"\" />,\n      text: 'Article',\n      disabled: true,\n      description: 'Includes article writing and editing tools'\n    },\n    {\n      id: 1, \n      icon: <img className=\"mr-3\" width=\"20\" src={PageFlowIcon} alt=\"\" />,\n      text: 'Presentation',\n      action: () => history.push(\"/editor/presentation/\"), \n      disabled: false,\n      description: 'Digital content layout and presentation tools.'\n    },\n  ]\n    return (\n        <div className=\"flex px-4 border-b border-gray-100 justify-between fixed w-full\" style={{backgroundColor: '#F8F8F8' }}>\n          <div className=\"flex flex-row\">\n            <InsMenu items={items} title=\"Project\">\n              <div className=\"py-4 px-4 text-gray-500 hasDropdown cursor-pointer\">New</div>\n            </InsMenu>\n\n              <a className=\"py-4 px-4 text-gray-500\" href=\"/\">Open...</a>\n              <NavLink to=\"/home\" activeClassName=\"border-b-4 border-indigo-500 text-indigo-500\" className=\"px-4 py-4 text-gray-500\">Home</NavLink>\n              {/* <NavLink to=\"/extensions\" activeClassName=\"border-b-4 border-indigo-500  text-indigo-500\" className=\"px-4 py-4 text-gray-500\">Extensions</NavLink> */}\n\n          </div>\n      {/* <UserInfo /> */}\n    </div>\n    )\n}\n\nexport default DashboardBar\n","/Users/manuel/Desktop/inscribe-app/src/store/AppReducer.js",[],"/Users/manuel/Desktop/inscribe-app/src/store/ActionTypes.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/topbar/ArticleToolbar.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/InsMenu.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/topbar/DesignToolbar.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/SideBarRight.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/BlockEditor.js",["146","147"],"import React, { useState } from 'react'\nimport ContentEditable from 'react-contenteditable'\nimport PlusIcon from './../assets/icons/plus.svg';\nimport { ReactSVG } from 'react-svg';\n\nexport default function BlockEditor(props) {\n\n    const [isFocused, setIsFocused] = useState(false);\n\n    const blockType = () => {\n        switch (props.block.type) {\n            case 'text':\n                return <ContentEditable\n                    tagName=\"div\"\n                    className={props.block.classlist.toString().replace(',', ' ')}\n                    draggable={false}\n                    html={props.block.data}\n                    disabled={false}\n                    onChange={(e) => console.log(e)}\n                    onBlur={() => { }}\n                />\n            case 'image':\n                return <img contentEditable={true} className={props.block.classlist.toString().replace(',', ' ')} alt={props.block.name} src={props.block.blob} />\n            case 'container':\n                return <div className={props.block.classlist.toString().replace(',', ' ')}>{\n                    props.block.children.map((item, i) => {\n                        if (item.type === 'text') {\n                            return <ContentEditable\n                                tagName=\"span\"\n                                key={i}\n                                className={item.classlist.toString().replace(',', ' ')}\n                                draggable={false}\n                                html={item.data}\n                                disabled={false}\n                                onChange={(e) => console.log(e)}\n                                onBlur={() => { }}\n                            />\n                        }\n                        if (item.type === 'link') {\n                            return <a className={item.classlist.toString().replace(',', ' ')}>{item.data}</a>\n                        }\n                    })\n                }\n                </div>\n            default:\n                break;\n        }\n    }\n\n    return (\n        <div className=\"cursor-default\" onBlur={() => setIsFocused(false)} onFocus={(e) => setIsFocused(true)}>\n            {\n                props.block.classlist.length > 0 && isFocused ?\n                    <div className=\"py-1 px-2 bg-indigo-600 cursor-move rounded-sm inline-flex\">\n                        {\n                            props.block.classlist.map((c, i) => {\n                                return <span key={i} className=\"text-white text-xs\">.{c}</span>\n                            })\n                        }\n\n                    </div> : null\n            }\n            <div className={`border-indigo-500 bg-white rounded-sm relative w-full ${isFocused ? 'border-2' : 'border-0'} ${props.snapshot.isDragging ? 'shadow-lg' : ''}`}>\n\n                {blockType()}\n\n                {\n                    isFocused ?\n                        <button className=\"absolute -right-3 top-1/2 p-1 transform -translate-y-1/2 bg-indigo-600 rounded-full\">\n                            <ReactSVG src={PlusIcon}\n                                beforeInjection={(svg) => {\n                                    svg.setAttribute('style', 'stroke: white; width: 18px; height: 18px;')\n                                }}\n                            />\n                        </button> : null\n                }\n\n            </div>\n        </div>\n    )\n}\n","/Users/manuel/Desktop/inscribe-app/src/components/ExtensionCard.js",["148"],"import React, { useState } from \"react\";\nimport { ReactSVG } from \"react-svg\";\nimport DownloadIcon from \"../assets/icons/DownloadIcon\";\nimport TrashIcon from \"../assets/icons/TrashIcon\";\nimport UpdateIcon from \"../assets/icons/UpdateIcon\";\n\nfunction ExtensionCard(props) {\n\n\n  return (\n    <div key={props.id} className=\"flex flex-row p-4 justify-between content-center rounded-lg bg-gray-900 bg-opacity-5 hover:bg-opacity-10\">\n      <div className=\"flex content-center w-9/12\">\n        <div className=\"self-center mr-4\">\n          <ReactSVG\n            beforeInjection={(svg) => {\n              svg.setAttribute(\"style\", \"width: 40px\");\n            }}\n            src={`images/${props.icon}.svg`}\n          />\n        </div>\n        <p className=\"text-lg self-center font-semibold text-gray-600 leading-5\">\n          {props.name} <br />\n          <span className=\"text-sm font-normal text-gray-400\">\n            {props.description}\n          </span>\n        </p>\n      </div>\n      <div className=\"flex flex-wrap flex-col justify-center content-center\">\n        <div className=\"self-center\">\n          {props.isInstalled ? (\n            props.hasUpdate ? (\n              <UpdateIcon />\n            ) : (\n              <TrashIcon />\n            )\n          ) : (\n            <DownloadIcon />\n          )}\n        </div>\n        <span className=\"text-gray-600 mt-2 text-sm\">\n          {props.isInstalled\n            ? props.hasUpdate\n              ? \"Update\"\n              : \"Remove\"\n            : props.size}\n        </span>\n      </div>\n    </div>\n  );\n}\n\nexport default ExtensionCard;\n","/Users/manuel/Desktop/inscribe-app/src/components/SideBarLeft.js",["149"],"\nimport React, { useContext, useState } from 'react'\nimport { GlobalContext } from '../store/GlobalState';\nimport Collaspible from './Collaspible';\nimport DropZoneFile from './DropZoneFile';\nimport RecentFile from './RecentFile';\nimport {\n    Droppable,\n    Draggable\n} from \"react-beautiful-dnd\";\nimport OutlineCollapsible from './OutlineCollapsible';\n\nexport default function SideBarLeft() {\n   \n    const { presentation } = useContext(GlobalContext);\n\n    return (\n            <div className=\"fixed h-full overflow-scroll z-10 bg-gray-50 border-r border-gray-100\" \n            style={{ width: 350, paddingTop: 60 }}>\n               \n                <Collaspible title=\"Assets\" >\n\n                    <DropZoneFile  />\n                    <div className=\"py-1\"> \n\n                    <Droppable key={0} droppableId={`droppable-assets`} isDropDisabled={true}>\n                            {(provided, snapshot) => (\n                                <div className=\"\" ref={provided.innerRef}>\n                                    {\n                                        presentation && presentation.assets.map((asset, index) => {\n\n                                            return <Draggable key={index} draggableId={`${asset.id}`} index={index}>\n                                            {(provided, snapshot) => (\n                                            \n                                            <div className={`${snapshot.isDragging ? 'shadow-lg rounded bg-gray-50' : ''}`} ref={provided.innerRef}\n                                             {...provided.draggableProps}\n                                             {...provided.dragHandleProps}><RecentFile type={asset.extension} name={asset.name} date={asset.date} /></div>\n                                            )}</Draggable>\n                                        })\n                                    }\n                                     {provided.placeholder}\n                               </div>             \n                                            \n                            )} \n                        \n                    </Droppable>\n                    </div>\n                </Collaspible>\n                <Collaspible title=\"Outline\" >\n                    {\n                        presentation && presentation.items.length > 0 && presentation.items.map((a, index) => {\n                            return <OutlineCollapsible key={index} item={a} >\n                                {\n                                    a.children && a.children.length > 0 && a.children.map((b, i) => {\n                                       return <OutlineCollapsible \n                                       item={b}\n                                       key={i}>\n                                           {\n                                               b.children && b.children.length > 0 && b.children.map((c, x) => {\n                                                return <OutlineCollapsible \n                                                item={c}\n                                                key={x}></OutlineCollapsible>\n                                               })\n                                           }\n                                       </OutlineCollapsible>\n                                    })\n                                }\n                            </OutlineCollapsible>\n                        })\n                    }\n                </Collaspible> \n            </div>\n        \n    )\n}\n","/Users/manuel/Desktop/inscribe-app/src/components/DropZoneFile.js",["150","151","152","153"],"import React, { useEffect } from \"react\";\nimport { useContext } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { GlobalContext } from \"../store/GlobalState\";\nimport DragDropIcon from \"./../assets/icons/drag.svg\";\n// import article from \"./../assets/articles/Article.xml\"\n// const XMLParser = require('react-xml-parser');\n// const axios = require('axios');\n\nimport { v4 } from 'uuid';\nfunction DropZoneFile(props) {\n\n  const { addAsset } = useContext(GlobalContext);\n\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles,\n    isDragActive,\n    isDragAccept,\n    isDragReject,\n  } = useDropzone();\n\n  \n\n  useEffect(() => {\n\n    acceptedFiles.map(file => {\n    \n      if (file.type === 'image/jpeg') {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onloadend = () => {\n          let asset = {\n            id: v4(),\n            date: new Date().toLocaleString(),\n            extension: 'JPEG',\n            classlist:[],\n            description: 'image',\n            type: 'image',\n            size: `${file.size}KB`,\n            data: file.name,\n            name: file.name,\n            blob: reader.result\n          }\n          addAsset(asset)\n         // console.log(reader.result)\n        }\n      }\n        \n        // file.arrayBuffer().then(data => {\n          \n        //   let asset = {\n        //     id: uuid(),\n        //     date: new Date().toLocaleString(),\n        //     extension: 'JPEG',\n        //     classlist:[],\n        //     type: 'image',\n        //     size: `${file.size}KB`,\n        //     data: file.name,\n        //     name: file.name,\n        //     blob: data\n        //   }\n        //   console.log(asset)\n        //   addAsset(asset)\n        // })\n\n\n      if (file.type === 'application/json') {\n        file.text().then(article => {\n          let file = JSON.parse(article);\n            if (file && file.extension === 'MEPSA') {\n              addAsset(file)\n            }\n        })\n      }\n    });\n  }, [acceptedFiles])\n\n  return (\n    <div className=\"flex justify-center content-center\">\n      <div\n        {...getRootProps({\n          onDrop: event => {\n            console.log(acceptedFiles)\n            \n          },\n          className: `${\n            isDragActive\n              ? \"bg-indigo-700 border-indigo-200\"\n              : \"bg-gray-900 border-gray-100\"\n          } bg-gray-100 p-3 flex-grow rounded-lg flex justify-center border-dotted border-4 focus:outline-none focus:border-4 focus:border-indigo-700 flex-col bg-opacity-5`,\n        })}\n      >\n        <input  {...getInputProps({className: \"min-w-full\" })} />\n        <div className=\"flex justify-center flex-wrap self-center\">\n            <img src={DragDropIcon} width=\"32\" className=\"my-4 opacity-50\" alt=\"\" />\n        </div>\n        <div className=\"mx-auto flex justify-center flex-wrap self-center\">\n          <p\n            className={`${\n              isDragActive ? \"text-indigo-300\" : \"text-gray-300\"\n            } self-center text-gray-300  text-center`}\n          >\n            Drag and drop file here.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DropZoneFile;\n","/Users/manuel/Desktop/inscribe-app/src/components/RecentContainer.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/sidebar/TemplatesBar.js",[],"/Users/manuel/Desktop/inscribe-app/src/assets/icons/DownloadIcon.js",[],"/Users/manuel/Desktop/inscribe-app/src/assets/icons/UpdateIcon.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/RecentFile.js",["154","155"],"import React from 'react'\nimport mepsaIcon from './../assets/icons/mepsa.svg';\nimport moreIcon from './../assets/icons/more.svg';\nimport ImageIcon from './../assets/icons/image.svg';\nimport TextTruncate from 'react-text-truncate';\n\nfunction RecentFile(props) {\n    return (\n        <div className=\"flex justify-between items-center p-2 border-b border-gray-50 hover:bg-gray-100 rounded hover:bg-opacity-30 cursor-pointer my-1\">\n            <div className=\"flex content-center\">\n                <img src={props.type === 'MEPSA' ? mepsaIcon : ImageIcon} width=\"18\" className=\"mr-2\" alt=\"\"/>\n                <p className=\"leading-3\">\n                     <span className=\"font-normal text-sm text-gray-600\">{props.name}</span>\n                   <br />\n                    <span className=\"font-normal text-xs text-gray-400\">{props.type}</span>\n                </p>\n               \n            </div>\n\n            {/* <div className=\"flex content-center\">\n                <img src={moreIcon} width=\"24\" className=\"mr-2\" alt=\"\" />\n            </div> */}\n        </div>\n    )\n}\n\nexport default RecentFile\n","/Users/manuel/Desktop/inscribe-app/src/components/Collaspible.js",[],"/Users/manuel/Desktop/inscribe-app/src/assets/icons/TrashIcon.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/buttons/EditButton.js",["156"],"import React from 'react'\nimport { ReactSVG } from \"react-svg\";\n\nfunction EditButton(props) {\n    return (\n        <button\n            className=\"p-2 ql-bold mx-1 rounded bg-gray-900 bg-opacity-0 hover:bg-opacity-5\"\n          key={props.cmd}\n          onMouseDown={evt => {\n            evt.preventDefault();\n            document.execCommand(props.cmd, false, props.arg); // Send the command to the browser\n          }}\n        >\n          <img src={props.icon} alt=\"icon\" />\n        </button>\n      );\n}\n\nexport default EditButton\n","/Users/manuel/Desktop/inscribe-app/src/components/FileTemplate.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/OutlineCollapsible.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/InsModal.js",[],"/Users/manuel/Desktop/inscribe-app/src/components/ImageCropper.js",["157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":40,"nodeType":"166","messageId":"167","endLine":1,"endColumn":48},{"ruleId":"164","severity":1,"message":"168","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":39,"column":8,"nodeType":"171","endLine":39,"endColumn":10,"suggestions":"172"},{"ruleId":"173","severity":1,"message":"174","line":21,"column":40,"nodeType":"175","messageId":"176","endLine":21,"endColumn":42},{"ruleId":"173","severity":1,"message":"174","line":41,"column":40,"nodeType":"175","messageId":"176","endLine":41,"endColumn":42},{"ruleId":"164","severity":1,"message":"177","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":20},{"ruleId":"164","severity":1,"message":"178","line":3,"column":5,"nodeType":"166","messageId":"167","endLine":3,"endColumn":9},{"ruleId":"173","severity":1,"message":"174","line":26,"column":56,"nodeType":"175","messageId":"176","endLine":26,"endColumn":58},{"ruleId":"179","severity":1,"message":"180","line":40,"column":36,"nodeType":"181","endLine":40,"endColumn":95},{"ruleId":"164","severity":1,"message":"165","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},{"ruleId":"164","severity":1,"message":"165","line":2,"column":29,"nodeType":"166","messageId":"167","endLine":2,"endColumn":37},{"ruleId":"164","severity":1,"message":"182","line":20,"column":5,"nodeType":"166","messageId":"167","endLine":20,"endColumn":17},{"ruleId":"164","severity":1,"message":"183","line":21,"column":5,"nodeType":"166","messageId":"167","endLine":21,"endColumn":17},{"ruleId":"173","severity":1,"message":"184","line":28,"column":28,"nodeType":"175","messageId":"185","endLine":28,"endColumn":30},{"ruleId":"169","severity":1,"message":"186","line":78,"column":6,"nodeType":"171","endLine":78,"endColumn":21,"suggestions":"187"},{"ruleId":"164","severity":1,"message":"188","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"189","line":5,"column":8,"nodeType":"166","messageId":"167","endLine":5,"endColumn":20},{"ruleId":"164","severity":1,"message":"190","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":18},{"ruleId":"164","severity":1,"message":"191","line":10,"column":13,"nodeType":"166","messageId":"167","endLine":10,"endColumn":25},{"ruleId":"164","severity":1,"message":"192","line":31,"column":19,"nodeType":"166","messageId":"167","endLine":31,"endColumn":27},{"ruleId":"164","severity":1,"message":"193","line":73,"column":10,"nodeType":"166","messageId":"167","endLine":73,"endColumn":23},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ContentEditable' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadPresentation'. Either include it or remove the dependency array.","ArrayExpression",["196"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TemplatesBar' is defined but never used.","'Link' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'isDragAccept' is assigned a value but never used.","'isDragReject' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","React Hook useEffect has a missing dependency: 'addAsset'. Either include it or remove the dependency array.",["197"],"'moreIcon' is defined but never used.","'TextTruncate' is defined but never used.","'ReactSVG' is defined but never used.","'selectedItem' is assigned a value but never used.","'setCrops' is assigned a value but never used.","'getCroppedImg' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [loadPresentation]",{"range":"202","text":"203"},"Update the dependencies array to be: [acceptedFiles, addAsset]",{"range":"204","text":"205"},[1485,1487],"[loadPresentation]",[2013,2028],"[acceptedFiles, addAsset]"]